name: CI - Pull Request

on: [pull_request]

permissions: write-all

jobs:
  code-scan:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    name: Code Scanning
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: nodejsscan Scan
        id: njsscan
        uses: ajinabraham/njsscan-action@7237412fdd36af517e2745077cedbf9d6900d711
        with:
          args: ". --sarif --output results.sarif || true"

      - name: Upload njsscan report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

  install:
    name: Installing Packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        run: yarn install

  db-create:
    name: Docker Image Database
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Docker Images
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: foo-docker-cache-8350e5a3e24c153df2275c9f80692773-mariadb
          restore-keys: |
            foo-docker-cache-8350e5a3e24c153df2275c9f80692773-

      - name: Build Image
        run: cd .docker && docker compose up -d --build

      - run: cd ..

      # - name: Create Maria DB
      #   run: node server/core/scripts/build-database.js

  testing:
    name: Run Unit Test
    runs-on: ubuntu-latest
    needs: [db-create, install]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"

      - name: Restore node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Restore Docker Images
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: foo-docker-cache-8350e5a3e24c153df2275c9f80692773-mariadb
          restore-keys: |
            foo-docker-cache-8350e5a3e24c153df2275c9f80692773-

      - name: Docker Compose UP Maria DB
        run: cd .docker && docker compose up -d

      - name: Run Unit Test
        run: yarn test:unitary

  next-build-homolog:
    name: Run Next Build Homolog
    runs-on: ubuntu-latest
    needs: [db-create, install]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"

      - name: Restore node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Restore Docker Images
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: foo-docker-cache-8350e5a3e24c153df2275c9f80692773-mariadb
          restore-keys: |
            foo-docker-cache-8350e5a3e24c153df2275c9f80692773-

      - name: Docker Compose UP Maria DB
        run: cd .docker && docker compose up -d

      - name: Run Next Build
        run: yarn build:homolog
